#!/bin/bash

# defaults
version=""
n_repetitions="10"
models="exp1_con_rho0.05 exp1_con_rho0.10 exp1_con_rho0.15"

input_version="version_0"

binnings="sb1,sb2,sb3"

errors="none stat syst norm stat,syst,norm"

fit_types="high both"

# parse command line
function PrintUsage()
{
	echo "PrintUsage $0 <option> <option>"
	echo "OPTIONS:"
	echo "    -version <string>        version of the simulation"
	echo "    -repetitions <integer>   number of repetitions to use"
	echo "    -models <string>         space-separated list of models"
	echo "    -input-version <string>  version of the input"
	echo "    -binnings <string>       comma-separated list of binnings"
	echo "    -errors <string>         space-separated list of error models"
	echo "    -fast                    use settings for a fast check"
}

while [ -n "$1" ]
do
	case $1 in
		"-h" | "-help" | "--help")
			PrintUsage
			exit 0
			;;
		"-version")
			shift
			version="$1"
			;;
		"-repetitions")
			shift
			n_repetitions="$1"
			;;
		"-models")
			shift
			models="$1"
			;;
		"-input-version")
			shift
			input_version="$1"
			;;
		"-binnings")
			shift
			binnings="$1"
			;;
		"-errors")
			shift
			errors="$1"
			;;
		"-fast")
			n_repetitions="5"
			models="exp1_con_rho0.10"
			binnings="sb1"
			;;
		*)
			echo "ERROR: parameter '$1' not understood."
			PrintUsage
			exit 1
			;;
	esac

	shift
done

# check input
if [ -z "$version" ]
then
	echo "ERROR: version not defined."
	PrintUsage
	exit 2
fi

#----------------------------------------------------------------------------------------------------

function RunOne()
{
	for seed in `seq 1 $n_repetitions`
	do
		echo "* $model, $error_model, seed $seed"

		mkdir -p "seed_$seed"
		cd "seed_$seed"

		$BASE_DIR/.simu_make_histograms -model-file "../../../models.root" -model-obj "$model/g_dsdt_CH" \
			-input-file "$BASE_DIR/data/input/$input_version/import.root" -binnings "$binnings" -seed $seed \
			-sim-stat-err $e_stat -sim-syst-err $e_syst -sim-norm-err $e_norm\
			&> "histograms.log" || exit 22

		if [ "$run_fits" == "1" ]
		then
			for tp in ${fit_types[*]}
			do
				$BASE_DIR/run_standard_fit -type "$tp" -input "histograms.root" -output "$tp" || exit 23
			done
		fi
	
		cd ..
	done

	$BASE_DIR/.simu_process_histograms -seed-min 1 -seed-max $n_repetitions -binnings "$binnings" &> "process_histograms.log" || exit 24

	if [ "$run_fits" == "1" ]
	then
		$BASE_DIR/.simu_process_fits -ref-file "../../models.root" -ref-object "$model/info" -input-pattern "seed_%u/fit_HighBeta.root"\
			-seed-min 1 -seed-max $n_repetitions -output "process_fits_HighBeta.root" &> "process_fits_HighBeta.log" || exit 25

		$BASE_DIR/.simu_process_fits -ref-file "../../models.root" -ref-object "$model/info" -input-pattern "seed_%u/fit_BothBetas.root"\
			-seed-min 1 -seed-max $n_repetitions -output "process_fits_BothBetas.root" &> "process_fits_BothBetas.log" || exit 25
	fi
}


#----------------------------------------------------------------------------------------------------

# execute
make -j8 || exit 3

topDir="data/simu/$version"

mkdir -p "$topDir"
cd "$topDir"

$BASE_DIR/.simu_sample_models &> "models.log" || exit 21

for model in $models
do
	mkdir -p "$model"
	cd "$model"

	for error_model in $errors
	do
		mkdir -p "errors_$error_model"
		cd "errors_$error_model"

		e_stat="0"
		e_syst="0"
		e_norm="0"

		if [[ "$error_model" == *"stat"* ]]; then e_stat="1"; fi
		if [[ "$error_model" == *"syst"* ]]; then e_syst="1"; fi
		if [[ "$error_model" == *"norm"* ]]; then e_norm="1"; fi

		run_fits="1"

		RunOne &

		cd ..
	done

	cd ..
done

wait
